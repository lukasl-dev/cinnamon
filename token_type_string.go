// Code generated by "stringer -type=TokenType -trimprefix=TokenType -output token_type_string.go"; DO NOT EDIT.

package cinnamon

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TokenTypeInvalid-0]
	_ = x[TokenTypeEOF-1]
	_ = x[TokenTypePrefix-2]
	_ = x[TokenTypeLabel-3]
	_ = x[TokenTypeFlag-4]
	_ = x[TokenTypeAssign-5]
	_ = x[TokenTypeArgument-6]
	_ = x[TokenTypeOpeningQuote-7]
	_ = x[TokenTypeClosingQuote-8]
}

const _TokenType_name = "InvalidEOFPrefixLabelFlagAssignArgumentOpeningQuoteClosingQuote"

var _TokenType_index = [...]uint8{0, 7, 10, 16, 21, 25, 31, 39, 51, 63}

func (i TokenType) String() string {
	if i >= TokenType(len(_TokenType_index)-1) {
		return "TokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenType_name[_TokenType_index[i]:_TokenType_index[i+1]]
}
